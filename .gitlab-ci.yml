stages:
  - build
  - post-build

build-image:
  stage: build
  image: docker:20.10.18-git
  # See: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker
  # For stateless builds, a sidecar dockerd service is needed
  # For stateful builds (i.e. DOCKER_HOST=unix:///var/run/docker.sock mounted from the host), a sidecar dockerd service is not needed
  # services:
  #   - docker:20.10.18-dind
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: $CI_PIPELINE_SOURCE == "web"
  variables:
    DOCKER_DRIVER: overlay2
  timeout: 120m
  script:
    - |
      export PIPELINE="$CI_COMMIT_BRANCH"
      set +e
      ./build.sh
      if [ $? = 0 ]; then
          echo BUILD_STATUS=success >> .build.state
      else
          echo BUILD_STATUS=failed >> .build.state
          exit 1
      fi
  artifacts:
    paths:
      - .build.state
    when: always
    expire_in: never

send-notification:
  stage: post-build
  image: alpine:3.14.8
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: $CI_PIPELINE_SOURCE == "web"
  when: always
  script:
    - |
      apk add --no-cache curl
      export X_CI_WEBHOOK_SECRET_HEADER="x-gitlab-webhook-secret: $X_GITLAB_WEBHOOK_SECRET"
      ./notify.sh
